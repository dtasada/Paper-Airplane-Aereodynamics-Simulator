@startuml





/' Objects '/

class Cell {
	+distanceSquared : float
	+position : v3
}


class Obstacle {
	+model : Model
	+position : v3
	+size : v3
}


class v3 {
	+operatorVector3() {query}
	+operatorfloat*() {query}
	+v3(float x, float y, float z)
	+v3(Vector3 v)
	+v3()
	+v3(float v)
	+x : float
	+y : float
	+z : float
	+to_string() : std::string {query}
	+operator*(const v3& other) : v3
	+operator*(const float& other) : v3
	+operator*=(const v3& other) : v3
	+operator*=(const float& other) : v3
	+operator+(const v3& other) : v3
	+operator+(const float& other) : v3
	+operator+=(const v3& other) : v3
	+operator-(const v3& other) : v3
	+operator-(const float& other) : v3
	+operator-=(const v3& other) : v3
	+operator/(const v3& other) : v3
	+operator/(const float& other) : v3
	+operator/=(const v3& other) : v3
	+operator/=(const float& other) : v3
}





/' Inheritance relationships '/




/' Aggregation relationships '/

Cell *-- v3


Obstacle "2" *-- v3






/' Nested objects '/



@enduml
